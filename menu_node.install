<?php


/**
 * @file
 *   Install file for Menu Node API.
 */

/**
 * Implements hook_schema().
 */
function menu_node_schema() {
  $schema['menu_node'] = array(
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'mlid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('mlid'),
    'indexes' => array(
      'nid' => array('nid'),
    ),
    'foreign_keys' => array(
      'nid' => array('node' => 'nid'),
      'mlid' => array('menu_links' => 'mlid'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_enable().
 *
 * On module enable, populate the {menu_node} table
 * based on existing menu items.
 */
function menu_node_enable() {
  $custom_menus = menu_load_all();
  $custom_menus_names = array_keys($custom_menus);
  if (empty($custom_menus_names)) {
    $custom_menus_names[] = '';
  }
  $result = db_select('menu_links', 'ml')
    ->fields('ml', array('mlid', 'link_path'))
    ->condition('menu_name', $custom_menus_names, 'IN')
    ->condition('link_path', 'node/%', '<>')
    ->condition('router_path', 'node/%', '=')
    ->execute()
    ->fetchAll();
  foreach ($result as $data) {
    $nid = str_replace('node/', '', $data->link_path);
    // Ensure that we did not grab any bad links accidentally.
    $check = (bool) db_query("SELECT COUNT(*) FROM {node} WHERE nid = :nid", array(':nid' => $nid))->fetchField();
    if ($check) {
      db_insert('menu_node')
        ->fields(array(
          'nid' => $nid,
          'mlid' => $data->mlid,
        ))
        ->execute();
    }
  }
}

/**
 * Implements hook_disable().
 *
 * On module disable, erase the {menu_node} table.
 */
function menu_node_disable() {
  db_delete('menu_node')
    ->execute();
}

/**
 * Implements hook_update_last_removed().
 */
function menu_node_update_last_removed() {
  return 7100;
}
